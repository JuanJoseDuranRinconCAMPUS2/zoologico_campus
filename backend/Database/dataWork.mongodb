//Inyeccion de data a la Base de Datos de MongoDB🪙

use("zoologico_Campus_JJ");

//🚧⛩️Inyeccion de data a la coleccion habitat⛩️🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.habitat.insertMany([
    {
      _id: Number(increment("habitat")),
      nombre: "Hábitat Tropical",
      dimensiones: "100m2",
      limite_Especimenes: 20,
      cantidad_Especimenes: 15,
      precio_Mantenimiento: 500,
      descripcion: "Un entorno tropical con abundante vegetación y agua"
    },
    {
      _id: Number(increment("habitat")),
      nombre: "Hábitat Desértico",
      dimensiones: "80m2",
      limite_Especimenes: 15,
      cantidad_Especimenes: 10,
      precio_Mantenimiento: 300,
      descripcion: "Un entorno seco con cactus y arena"
    },
    {
      _id: Number(increment("habitat")),
      nombre: "Hábitat Acuático",
      dimensiones: "120m2",
      limite_Especimenes: 30,
      cantidad_Especimenes: 25,
      precio_Mantenimiento: 700,
      descripcion: "Un entorno acuático con peces y plantas acuáticas"
    },
    {
      _id: Number(increment("habitat")),
      nombre: "Hábitat Boscoso",
      dimensiones: "150m2",
      limite_Especimenes: 25,
      cantidad_Especimenes: 18,
      precio_Mantenimiento: 550,
      descripcion: "Un entorno boscoso con árboles altos y sombra"
    },
    {
      _id: Number(increment("habitat")),
      nombre: "Hábitat Polar",
      dimensiones: "200m2",
      limite_Especimenes: 10,
      cantidad_Especimenes: 8,
      precio_Mantenimiento: 800,
      descripcion: "Un entorno frío con hielo y pinguinos"
    },
    {
      _id: Number(increment("habitat")),
      nombre: "Hábitat de Sabana",
      dimensiones: "180m2",
      limite_Especimenes: 18,
      cantidad_Especimenes: 12,
      precio_Mantenimiento: 450,
      descripcion: "Un entorno amplio con hierba y pocos árboles"
    },
    {
      _id: Number(increment("habitat")),
      nombre: "Hábitat de Montaña",
      dimensiones: "90m2",
      limite_Especimenes: 12,
      cantidad_Especimenes: 9,
      precio_Mantenimiento: 350,
      descripcion: "Un entorno en altura con rocas y vistas panorámicas"
    },
    {
      _id: Number(increment("habitat")),
      nombre: "Hábitat Subterráneo",
      dimensiones: "70m2",
      limite_Especimenes: 10,
      cantidad_Especimenes: 7,
      precio_Mantenimiento: 400,
      descripcion: "Un entorno oscuro bajo tierra con túneles y cuevas"
    },
    {
      _id: Number(increment("habitat")),
      nombre: "Hábitat Aéreo",
      dimensiones: "50m2",
      limite_Especimenes: 8,
      cantidad_Especimenes: 6,
      precio_Mantenimiento: 250,
      descripcion: "Un entorno elevado con ramas y nidos"
    },
    {
      _id: Number(increment("habitat")),
      nombre: "Hábitat de Pantano",
      dimensiones: "110m2",
      limite_Especimenes: 22,
      cantidad_Especimenes: 17,
      precio_Mantenimiento: 600,
      descripcion: "Un entorno con agua estancada, plantas y anfibios"
    }
]);

//🚧🦊Inyeccion de data a la coleccion animales🦊🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.animales.insertMany([
    {
      _id: Number(increment("animales")),
      nombre: "León",
      especie: "Panthera leo",
      dieta: "Carnívora",
      descripcion: "El león es un felino majestuoso conocido por ser el rey de la selva.",
      id_Habitat: 1  // Hábitat Tropical
    },
    {
      _id: Number(increment("animales")),
      nombre: "Elefante",
      especie: "Loxodonta africana",
      dieta: "Herbívora",
      descripcion: "El elefante es un mamífero de gran tamaño con una trompa distintiva.",
      id_Habitat: 6  // Hábitat de Sabana
    },
    {
      _id: Number(increment("animales")),
      nombre: "Tigre",
      especie: "Panthera tigris",
      dieta: "Carnívora",
      descripcion: "El tigre es un felino poderoso con rayas naranjas y negras.",
      id_Habitat: 4  // Hábitat Boscoso
    },
    {
      _id: Number(increment("animales")),
      nombre: "Oso Polar",
      especie: "Ursus maritimus",
      dieta: "Carnívora",
      descripcion: "El oso polar habita en regiones frías y se alimenta principalmente de peces y focas.",
      id_Habitat: 5  // Hábitat Polar
    },
    {
      _id: Number(increment("animales")),
      nombre: "Cebra",
      especie: "Equus zebra",
      dieta: "Herbívora",
      descripcion: "La cebra es un equino con rayas blancas y negras que le brindan camuflaje.",
      id_Habitat: 6  // Hábitat de Sabana
    },
    {
      _id: Number(increment("animales")),
      nombre: "Pinguino Emperador",
      especie: "Aptenodytes forsteri",
      dieta: "Carnívora",
      descripcion: "El pinguino emperador es conocido por su tamaño y su forma de crianza.",
      id_Habitat: 8  // Hábitat Subterráneo
    },
    {
      _id: Number(increment("animales")),
      nombre: "Jirafa",
      especie: "Giraffa camelopardalis",
      dieta: "Herbívora",
      descripcion: "La jirafa es un mamífero con un largo cuello y manchas en su pelaje.",
      id_Habitat: 6  // Hábitat de Sabana
    },
    {
      _id: Number(increment("animales")),
      nombre: "Lobo Gris",
      especie: "Canis lupus",
      dieta: "Carnívora",
      descripcion: "El lobo gris es un depredador social que vive en manadas.",
      id_Habitat: 4  // Hábitat Boscoso
    },
    {
      _id: Number(increment("animales")),
      nombre: "Hipopótamo",
      especie: "Hippopotamus amphibius",
      dieta: "Herbívora",
      descripcion: "El hipopótamo es un animal semiacuático con una estructura robusta.",
      id_Habitat: 2  // Hábitat Acuático
    },
    {
      _id: Number(increment("animales")),
      nombre: "Panda Gigante",
      especie: "Ailuropoda melanoleuca",
      dieta: "Herbívora",
      descripcion: "El panda gigante es un oso de pelaje blanco y negro que se alimenta de bambú.",
      id_Habitat: 4  // Hábitat Boscoso
    }
]);

//🚧🌰Inyeccion de data a la coleccion alimento🌰🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.alimento.insertMany([
    {
      _id: Number(increment("alimento")),
      nombre: "Carne de Res",
      descripcion: "Carne de res magra y fresca",
      caducidad: new Date("2023-12-31"),
      lugar_conservacion: "Refrigeración",
      tipo_de_alimento: "Carnívoro",
      precio_kg: 15
    },
    {
      _id: Number(increment("alimento")),
      nombre: "Frutas Variadas",
      descripcion: "Variedad de frutas frescas y maduras",
      caducidad: new Date("2023-09-30"),
      lugar_conservacion: "Refrigeración",
      tipo_de_alimento: "Herbívoro",
      precio_kg: 10
    },
    {
      _id: Number(increment("alimento")),
      nombre: "Pescado Fresco",
      descripcion: "Pescado recién capturado del mar",
      caducidad: new Date("2023-08-31"),
      lugar_conservacion: "Congelación",
      tipo_de_alimento: "Piscívoro",
      precio_kg: 18
    },
    {
      _id: Number(increment("alimento")),
      nombre: "Insectos",
      descripcion: "Variedad de insectos vivos",
      caducidad: new Date("2023-10-15"),
      lugar_conservacion: "Temperatura ambiente",
      tipo_de_alimento: "Insectívoro",
      precio_kg: 5
    },
    {
      _id: Number(increment("alimento")),
      nombre: "Plantas Acuáticas",
      descripcion: "Diversas plantas acuáticas para animales herbívoros acuáticos",
      caducidad: new Date("2023-11-30"),
      lugar_conservacion: "Agua",
      tipo_de_alimento: "Herbívoro Acuático",
      precio_kg: 8
    },
    {
      _id: Number(increment("alimento")),
      nombre: "Aves de Corral",
      descripcion: "Carne de pollo y otras aves",
      caducidad: new Date("2023-09-15"),
      lugar_conservacion: "Refrigeración",
      tipo_de_alimento: "Omnívoro",
      precio_kg: 12
    },
    {
      _id: Number(increment("alimento")),
      nombre: "Hoja de Bambú",
      descripcion: "Hojas frescas de bambú",
      caducidad: new Date("2023-12-15"),
      lugar_conservacion: "Refrigeración",
      tipo_de_alimento: "Herbívoro",
      precio_kg: 7
    },
    {
      _id: Number(increment("alimento")),
      nombre: "Carne de Caza",
      descripcion: "Carne de caza magra y natural",
      caducidad: new Date("2023-11-15"),
      lugar_conservacion: "Congelación",
      tipo_de_alimento: "Carnívoro",
      precio_kg: 20
    },
    {
      _id: Number(increment("alimento")),
      nombre: "Ratones Vivos",
      descripcion: "Ratones vivos para alimentar a animales carnívoros",
      caducidad: new Date("2023-08-31"),
      lugar_conservacion: "Temperatura ambiente",
      tipo_de_alimento: "Carnívoro",
      precio_kg: 25
    },
    {
      _id: Number(increment("alimento")),
      nombre: "Verduras Variadas",
      descripcion: "Variedad de verduras frescas",
      caducidad: new Date("2023-09-30"),
      lugar_conservacion: "Refrigeración",
      tipo_de_alimento: "Herbívoro",
      precio_kg: 6
    }
]);

//🚧💊Inyeccion de data a la coleccion medicamento💊🚧}

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.medicamento.insertMany([
    {
      _id: Number(increment("medicamento")),
      nombre: "Analgésico",
      caducidad: new Date("2024-12-31"),
      descripcion: "Medicamento para aliviar el dolor moderado."
    },
    {
      _id: Number(increment("medicamento")),
      nombre: "Antibiótico",
      caducidad: new Date("2024-10-15"),
      descripcion: "Medicamento para tratar infecciones bacterianas."
    },
    {
      _id: Number(increment("medicamento")),
      nombre: "Antiinflamatorio",
      caducidad: new Date("2024-11-30"),
      descripcion: "Medicamento para reducir la inflamación y el dolor."
    },
    {
      _id: Number(increment("medicamento")),
      nombre: "Antipirético",
      caducidad: new Date("2024-09-30"),
      descripcion: "Medicamento para reducir la fiebre."
    },
    {
      _id: Number(increment("medicamento")),
      nombre: "Desparasitante",
      caducidad: new Date("2024-08-31"),
      descripcion: "Medicamento para eliminar parásitos internos y externos."
    },
    {
      _id: Number(increment("medicamento")),
      nombre: "Vitamina C",
      caducidad: new Date("2024-07-31"),
      descripcion: "Suplemento de vitamina C para mejorar el sistema inmunológico."
    },
    {
      _id: Number(increment("medicamento")),
      nombre: "Antiulceroso",
      caducidad: new Date("2024-06-30"),
      descripcion: "Medicamento para tratar úlceras gástricas."
    },
    {
      _id: Number(increment("medicamento")),
      nombre: "Antihistamínico",
      caducidad: new Date("2024-05-31"),
      descripcion: "Medicamento para aliviar alergias y síntomas de histamina."
    },
    {
      _id: Number(increment("medicamento")),
      nombre: "Ansiolítico",
      caducidad: new Date("2024-04-30"),
      descripcion: "Medicamento para tratar la ansiedad y el estrés."
    },
    {
      _id: Number(increment("medicamento")),
      nombre: "Expectorante",
      caducidad: new Date("2024-03-31"),
      descripcion: "Medicamento para facilitar la eliminación de mucosidad."
    }
]);

//🚧🍽️Inyeccion de data a la coleccion his_Alimento🍽️🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.his_Alimento.insertMany([
    {
      _id: Number(increment("his_alimento")),
      fecha_Suministro: new Date("2023-08-01"),
      alimento: "Carne de Res",
      descripcion: "Suministro de carne de res magra",
      id_Animal: 1,  // León
      id_Alimento: 1  // Carne de Res
    },
    {
      _id: Number(increment("his_alimento")),
      fecha_Suministro: new Date("2023-08-02"),
      alimento: "Frutas Variadas",
      descripcion: "Suministro de frutas frescas y maduras",
      id_Animal: 2,  // Elefante
      id_Alimento: 2  // Frutas Variadas
    },
    {
      _id: Number(increment("his_alimento")),
      fecha_Suministro: new Date("2023-08-03"),
      alimento: "Carne de Res",
      descripcion: "Suministro de carne de res magra",
      id_Animal: 3,  // Tigre
      id_Alimento: 1  // Carne de Res
    },
    {
      _id: Number(increment("his_alimento")),
      fecha_Suministro: new Date("2023-08-04"),
      alimento: "Pescado Fresco",
      descripcion: "Suministro de pescado recién capturado",
      id_Animal: 4,  // Oso Polar
      id_Alimento: 3  // Pescado Fresco
    },
    {
      _id: Number(increment("his_alimento")),
      fecha_Suministro: new Date("2023-08-05"),
      alimento: "Verduras Variadas",
      descripcion: "Suministro de verduras frescas",
      id_Animal: 5,  // Cebra
      id_Alimento: 10  // Verduras Variadas
    },
    {
      _id: Number(increment("his_alimento")),
      fecha_Suministro: new Date("2023-08-06"),
      alimento: "Pescado Fresco",
      descripcion: "Suministro de pescado recién capturado",
      id_Animal: 6,  // Pingüino Emperador
      id_Alimento: 3  // Pescado Fresco
    },
    {
      _id: Number(increment("his_alimento")),
      fecha_Suministro: new Date("2023-08-07"),
      alimento: "Hoja de Bambú",
      descripcion: "Suministro de hojas frescas de bambú",
      id_Animal: 7,  // Jirafa
      id_Alimento: 7  // Hoja de Bambú
    },
    {
      _id: Number(increment("his_alimento")),
      fecha_Suministro: new Date("2023-08-08"),
      alimento: "Carne de Caza",
      descripcion: "Suministro de carne de caza",
      id_Animal: 8,  // Lobo Gris
      id_Alimento: 8  // Carne de Caza
    },
    {
      _id: Number(increment("his_alimento")),
      fecha_Suministro: new Date("2023-08-09"),
      alimento: "Ratones Vivos",
      descripcion: "Suministro de ratones vivos",
      id_Animal: 9,  // Hipopótamo
      id_Alimento: 9  // Ratones Vivos
    },
    {
      _id: Number(increment("his_alimento")),
      fecha_Suministro: new Date("2023-08-10"),
      alimento: "Verduras Variadas",
      descripcion: "Suministro de verduras frescas",
      id_Animal: 10,  // Panda Gigante
      id_Alimento: 10  // Verduras Variadas
    }
]);

//🚧🐰Inyeccion de data a la coleccion his_Exhibicion🐰🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.his_Exhibicion.insertMany([
    {
      _id: Number(increment("his_exibicion")),
      fecha_Inicio: new Date("2023-08-01"),
      fecha_Fin: new Date("2023-08-05"),
      id_Animal: 1,  // León
      descripcion: "Exhibición de leones en su hábitat natural."
    },
    {
      _id: Number(increment("his_exibicion")),
      fecha_Inicio: new Date("2023-08-03"),
      fecha_Fin: new Date("2023-08-08"),
      id_Animal: 2,  // Elefante
      descripcion: "Exhibición de elefantes en su área de juego."
    },
    {
      _id: Number(increment("his_exibicion")),
      fecha_Inicio: new Date("2023-08-07"),
      fecha_Fin: new Date("2023-08-10"),
      id_Animal: 3,  // Tigre
      descripcion: "Exhibición de tigres realizando saltos y acrobacias."
    },
    {
      _id: Number(increment("his_exibicion")),
      fecha_Inicio: new Date("2023-08-09"),
      fecha_Fin: new Date("2023-08-12"),
      id_Animal: 4,  // Oso Polar
      descripcion: "Exhibición de osos polares nadando en su piscina."
    },
    {
      _id: Number(increment("his_exibicion")),
      fecha_Inicio: new Date("2023-08-11"),
      fecha_Fin: new Date("2023-08-15"),
      id_Animal: 5,  // Cebra
      descripcion: "Exhibición de cebras pastando en su pradera."
    },
    {
      _id: Number(increment("his_exibicion")),
      fecha_Inicio: new Date("2023-08-13"),
      fecha_Fin: new Date("2023-08-18"),
      id_Animal: 6,  // Pingüino Emperador
      descripcion: "Exhibición de pinguinos emperadores en su hábitat gélido."
    },
    {
      _id: Number(increment("his_exibicion")),
      fecha_Inicio: new Date("2023-08-15"),
      fecha_Fin: new Date("2023-08-20"),
      id_Animal: 7,  // Jirafa
      descripcion: "Exhibición de jirafas alimentándose de hojas altas."
    },
    {
      _id: Number(increment("his_exibicion")),
      fecha_Inicio: new Date("2023-08-17"),
      fecha_Fin: new Date("2023-08-22"),
      id_Animal: 8,  // Lobo Gris
      descripcion: "Exhibición de lobos grises aullando en coro."
    },
    {
      _id: Number(increment("his_exibicion")),
      fecha_Inicio: new Date("2023-08-19"),
      fecha_Fin: new Date("2023-08-24"),
      id_Animal: 9,  // Hipopótamo
      descripcion: "Exhibición de hipopótamos nadando en su estanque."
    },
    {
      _id: Number(increment("his_exibicion")),
      fecha_Inicio: new Date("2023-08-21"),
      fecha_Fin: new Date("2023-08-26"),
      id_Animal: 10,  // Panda Gigante
      descripcion: "Exhibición de pandas gigantes jugando con troncos de bambú."
    }
]);

//🚧🚨Inyeccion de data a la coleccion his_Atencion🚨🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.his_Atencion.insertMany([
    {
      _id: Number(increment("his_atencion")),
      tipo_Atencion: "Cuidados Médicos",
      medicamento: "Antiinflamatorio",
      descripcion: "Aplicación de antiinflamatorio para tratar una lesión",
      id_Animal: 1  // León
    },
    {
      _id: Number(increment("his_atencion")),
      tipo_Atencion: "Examen de Salud",
      medicamento: "Vitaminas",
      descripcion: "Suministro de vitaminas para mejorar la salud general",
      id_Animal: 2  // Elefante
    },
    {
      _id: Number(increment("his_atencion")),
      tipo_Atencion: "Tratamiento",
      medicamento: "Analgésico",
      descripcion: "Dosis de analgésico para aliviar el dolor",
      id_Animal: 3  // Tigre
    },
    {
      _id: Number(increment("his_atencion")),
      tipo_Atencion: "Cuidados Especiales",
      medicamento: "Antibiótico",
      descripcion: "Tratamiento con antibiótico para una infección",
      id_Animal: 4  // Oso Polar
    },
    {
      _id: Number(increment("his_atencion")),
      tipo_Atencion: "Control de Dieta",
      medicamento: "Suplemento Nutricional",
      descripcion: "Suplemento para mejorar la dieta del animal",
      id_Animal: 5  // Cebra
    },
    {
      _id: Number(increment("his_atencion")),
      tipo_Atencion: "Rehabilitación",
      medicamento: "Antiinflamatorio",
      descripcion: "Terapia de rehabilitación con antiinflamatorios",
      id_Animal: 6  // Pingüino Emperador
    },
    {
      _id: Number(increment("his_atencion")),
      tipo_Atencion: "Examen Veterinario",
      medicamento: "Vitaminas",
      descripcion: "Suministro de vitaminas durante el examen",
      id_Animal: 7  // Jirafa
    },
    {
      _id: Number(increment("his_atencion")),
      tipo_Atencion: "Tratamiento de Heridas",
      medicamento: "Antibiótico",
      descripcion: "Aplicación de antibiótico en una herida",
      id_Animal: 8  // Lobo Gris
    },
    {
      _id: Number(increment("his_atencion")),
      tipo_Atencion: "Control de Salud",
      medicamento: "Antiparasitario",
      descripcion: "Desparasitación y control de salud",
      id_Animal: 9  // Hipopótamo
    },
    {
      _id: Number(increment("his_atencion")),
      tipo_Atencion: "Atención General",
      medicamento: "Vitaminas",
      descripcion: "Suministro de vitaminas para el bienestar",
      id_Animal: 10  // Panda Gigante
    }
]);

//🚧🥼Inyeccion de data a la coleccion his_Medicamento🥼🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.his_Medicamento.insertMany([
    {
      _id: Number(increment("his_medicamento")),
      fecha_Suministro: new Date("2023-08-01"),
      id_Medicamento: 1,  // Analgésico
      id_Animal: 1,  // León
      cant_suministro: "2 tabletas",
      descripcion: "Suministro de analgésico para aliviar el dolor"
    },
    {
      _id: Number(increment("his_medicamento")),
      fecha_Suministro: new Date("2023-08-03"),
      id_Medicamento: 2,  // Vitaminas
      id_Animal: 2,  // Elefante
      cant_suministro: "1 dosis",
      descripcion: "Suministro de vitaminas como suplemento"
    },
    {
      _id: Number(increment("his_medicamento")),
      fecha_Suministro: new Date("2023-08-07"),
      id_Medicamento: 3,  // Antibiótico
      id_Animal: 3,  // Tigre
      cant_suministro: "5 ml",
      descripcion: "Tratamiento con antibiótico para infección"
    },
    {
      _id: Number(increment("his_medicamento")),
      fecha_Suministro: new Date("2023-08-09"),
      id_Medicamento: 4,  // Antiparasitario
      id_Animal: 4,  // Oso Polar
      cant_suministro: "1 dosis",
      descripcion: "Desparasitación y control de salud"
    },
    {
      _id: Number(increment("his_medicamento")),
      fecha_Suministro: new Date("2023-08-11"),
      id_Medicamento: 5,  // Antiinflamatorio
      id_Animal: 5,  // Cebra
      cant_suministro: "3 ml",
      descripcion: "Aplicación de antiinflamatorio para lesión"
    },
    {
      _id: Number(increment("his_medicamento")),
      fecha_Suministro: new Date("2023-08-13"),
      id_Medicamento: 1,  // Analgésico
      id_Animal: 6,  // Pingüino Emperador
      cant_suministro: "1 tableta",
      descripcion: "Suministro de analgésico para tratamiento"
    },
    {
      _id: Number(increment("his_medicamento")),
      fecha_Suministro: new Date("2023-08-15"),
      id_Medicamento: 2,  // Vitaminas
      id_Animal: 7,  // Jirafa
      cant_suministro: "2 dosis",
      descripcion: "Suministro de vitaminas como parte del cuidado"
    },
    {
      _id: Number(increment("his_medicamento")),
      fecha_Suministro: new Date("2023-08-17"),
      id_Medicamento: 3,  // Antibiótico
      id_Animal: 8,  // Lobo Gris
      cant_suministro: "4 ml",
      descripcion: "Tratamiento con antibiótico para herida"
    },
    {
      _id: Number(increment("his_medicamento")),
      fecha_Suministro: new Date("2023-08-19"),
      id_Medicamento: 4,  // Antiparasitario
      id_Animal: 9,  // Hipopótamo
      cant_suministro: "1 dosis",
      descripcion: "Desparasitación y control de salud"
    },
    {
      _id: Number(increment("his_medicamento")),
      fecha_Suministro: new Date("2023-08-21"),
      id_Medicamento: 5,  // Antiinflamatorio
      id_Animal: 10,  // Panda Gigante
      cant_suministro: "2 ml",
      descripcion: "Aplicación de antiinflamatorio para malestar"
    }
]);

//🚧💥Inyeccion de data a la coleccion his_Med_Negativo💥🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.his_Med_Negativo.insertMany([
    {
      _id: Number(increment("his_med_negativo")),
      id_medicamento: 1,  // Analgésico
      descripcion: "Reacción adversa al analgésico en el león",
      id_Animal: 1  // León
    },
    {
      _id: Number(increment("his_med_negativo")),
      id_medicamento: 2,  // Vitaminas
      descripcion: "Efectos secundarios de las vitaminas en el elefante",
      id_Animal: 2  // Elefante
    },
    {
      _id: Number(increment("his_med_negativo")),
      id_medicamento: 3,  // Antibiótico
      descripcion: "Reacción alérgica al antibiótico en el tigre",
      id_Animal: 3  // Tigre
    },
    {
      _id: Number(increment("his_med_negativo")),
      id_medicamento: 4,  // Antiparasitario
      descripcion: "Intolerancia al antiparasitario en el oso polar",
      id_Animal: 4  // Oso Polar
    },
    {
      _id: Number(increment("his_med_negativo")),
      id_medicamento: 5,  // Antiinflamatorio
      descripcion: "Malestar después del antiinflamatorio en la cebra",
      id_Animal: 5  // Cebra
    },
    {
      _id: Number(increment("his_med_negativo")),
      id_medicamento: 1,  // Analgésico
      descripcion: "Reacción adversa al analgésico en el pinguino emperador",
      id_Animal: 6  // Pingüino Emperador
    },
    {
      _id: Number(increment("his_med_negativo")),
      id_medicamento: 2,  // Vitaminas
      descripcion: "Efectos secundarios de las vitaminas en la jirafa",
      id_Animal: 7  // Jirafa
    },
    {
      _id: Number(increment("his_med_negativo")),
      id_medicamento: 3,  // Antibiótico
      descripcion: "Reacción alérgica al antibiótico en el lobo gris",
      id_Animal: 8  // Lobo Gris
    },
    {
      _id: Number(increment("his_med_negativo")),
      id_medicamento: 4,  // Antiparasitario
      descripcion: "Intolerancia al antiparasitario en el hipopótamo",
      id_Animal: 9  // Hipopótamo
    },
    {
      _id: Number(increment("his_med_negativo")),
      id_medicamento: 5,  // Antiinflamatorio
      descripcion: "Malestar después del antiinflamatorio en el panda gigante",
      id_Animal: 10  // Panda Gigante
    }
]);

//🚧🔗Inyeccion de data a la coleccion producto🔗🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.producto.insertMany([
    {
      _id: Number(increment("producto")),
      nombre: "Souvenir de Elefante",
      descripcion: "Recuerdo en forma de elefante de peluche",
      precio: 20000,
      caducidad: null
    },
    {
      _id: Number(increment("producto")),
      nombre: "Gorra de Tigre",
      descripcion: "Gorra con diseño de tigre para los visitantes",
      precio: 15000,
      caducidad: null
    },
    {
      _id: Number(increment("producto")),
      nombre: "Kit de Explorador",
      descripcion: "Kit con binoculares, brújula y cuaderno de campo",
      precio: 30000,
      caducidad: null
    },
    {
      _id: Number(increment("producto")),
      nombre: "Figura de León",
      descripcion: "Figura de león esculpida a mano",
      precio: 400000,
      caducidad: null
    },
    {
      _id: Number(increment("producto")),
      nombre: "Libro de Animales",
      descripcion: "Libro ilustrado con información sobre animales del zoológico",
      precio: 25000,
      caducidad: null
    },
    {
      _id: Number(increment("producto")),
      nombre: "Taza de Pinguino",
      descripcion: "Taza con diseño de pinguino para tomar café o té",
      precio: 20000,
      caducidad: null
    },
    {
      _id: Number(increment("producto")),
      nombre: "Puzzle de Jirafa",
      descripcion: "Puzzle de 1000 piezas con imagen de jirafa",
      precio: 18000,
      caducidad: null
    },
    {
      _id: Number(increment("producto")),
      nombre: "galletas de panda",
      descripcion: "galletas en forma de panda",
      precio: 4000,
      caducidad: new Date("2023-08-01")
    },
    {
      _id: Number(increment("producto")),
      nombre: "Peluche de Panda Gigante",
      descripcion: "Peluche suave de panda gigante",
      precio: 300000,
      caducidad: null
    },
    {
      _id: Number(increment("producto")),
      nombre: "Mapa del Zoológico",
      descripcion: "Mapa detallado con rutas y ubicaciones de animales",
      precio: 5000,
      caducidad: null
    }
]);

//🚧🧨Inyeccion de data a la coleccion inventario🧨🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.inventario.insertMany([
    {
      _id: Number(increment("inventario")),
      cantidad: 100,
      fecha_Ingreso: new Date("2023-08-01"),
      descripcion: "Inventario inicial de souvenirs de elefante",
      id_Producto: 1
    },
    {
      _id: Number(increment("inventario")),
      cantidad: 50,
      fecha_Ingreso: new Date("2023-08-02"),
      descripcion: "Inventario inicial de gorras de tigre",
      id_Producto: 2
    },
    {
      _id: Number(increment("inventario")),
      cantidad: 30,
      fecha_Ingreso: new Date("2023-08-03"),
      descripcion: "Inventario inicial de kits de explorador",
      id_Producto: 3
    },
    {
      _id: Number(increment("inventario")),
      cantidad: 40,
      fecha_Ingreso: new Date("2023-08-04"),
      descripcion: "Inventario inicial de figuras de león",
      id_Producto: 4
    },
    {
      _id: Number(increment("inventario")),
      cantidad: 75,
      fecha_Ingreso: new Date("2023-08-05"),
      descripcion: "Inventario inicial de libros de animales",
      id_Producto: 5
    },
    {
      _id: Number(increment("inventario")),
      cantidad: 60,
      fecha_Ingreso: new Date("2023-08-06"),
      descripcion: "Inventario inicial de tazas de pinguino",
      id_Producto: 6
    },
    {
      _id: Number(increment("inventario")),
      cantidad: 25,
      fecha_Ingreso: new Date("2023-08-07"),
      descripcion: "Inventario inicial de puzzles de jirafa",
      id_Producto: 7
    },
    {
      _id: Number(increment("inventario")),
      cantidad: 10,
      fecha_Ingreso: new Date("2023-08-08"),
      descripcion: "Inventario inicial de galletas de panda",
      id_Producto: 8
    },
    {
      _id: Number(increment("inventario")),
      cantidad: 50,
      fecha_Ingreso: new Date("2023-08-09"),
      descripcion: "Inventario inicial de peluches de panda gigante",
      id_Producto: 9
    },
    {
      _id: Number(increment("inventario")),
      cantidad: 100,
      fecha_Ingreso: new Date("2023-08-10"),
      descripcion: "Inventario inicial de mapas del zoológico",
      id_Producto: 10
    }
]);

//🚧🧑‍🦰Inyeccion de data a la coleccion cliente🧑‍🦰🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.cliente.insertMany([
    {
      _id: Number(increment("cliente")),
      nombre: "Ana López",
      genero: "Femenino",
      identificacion: "123456789",
      edad: "25",
      celular: "3125633636",
      correo_electronico: "ana@gmail.com"
    },
    {
      _id: Number(increment("cliente")),
      nombre: "Juan Pérez",
      genero: "Masculino",
      identificacion: "564564564",
      edad: "30",
      celular: "3152356969",
      correo_electronico: "juan@hotmail.com"
    },
    {
      _id: Number(increment("cliente")),
      nombre: "María Rodríguez",
      genero: "Femenino",
      identificacion: "656456456",
      edad: "40",
      celular: "3156988989",
      correo_electronico: "maria@gmail.com"
    },
    {
      _id: Number(increment("cliente")),
      nombre: "Luis González",
      genero: "Masculino",
      identificacion: "867674567",
      edad: "22",
      celular: "3523636565",
      correo_electronico: "luis@gmail.com"
    },
    {
      _id: Number(increment("cliente")),
      nombre: "Carmen Martínez",
      genero: "Femenino",
      identificacion: "667786546",
      edad: "28",
      celular: "3000002222",
      correo_electronico: "carmen@gmail.com"
    },
    {
      _id: Number(increment("cliente")),
      nombre: "Pedro Sánchez",
      genero: "Masculino",
      identificacion: "125621454",
      edad: "35",
      celular: "3002565202",
      correo_electronico: "pedro@gmail.com"
    },
    {
      _id: Number(increment("cliente")),
      nombre: "Laura Ramírez",
      genero: "Femenino",
      identificacion: "354256596",
      edad: "45",
      celular: "3152353535",
      correo_electronico: "laura@gmail.com"
    },
    {
      _id: Number(increment("cliente")),
      nombre: "Jorge Castro",
      genero: "Masculino",
      identificacion: "565148822",
      edad: "27",
      celular: "3124578521",
      correo_electronico: "jorge@gmail.com"
    },
    {
      _id: Number(increment("cliente")),
      nombre: "Sofía Díaz",
      genero: "Femenino",
      identificacion: "155478955",
      edad: "19",
      celular: "3015602525",
      correo_electronico: "sofia@gmail.com"
    },
    {
      _id: Number(increment("cliente")),
      nombre: "Ricardo Torres",
      genero: "Masculino",
      identificacion: "563255663",
      edad: "33",
      celular: "3415688989",
      correo_electronico: "ricardo@gmail.com"
    },
]);

//🚧🎫Inyeccion de data a la coleccion tickets🎫🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.tickets.insertMany([
    {
      _id: Number(increment("tickets")),
      tipo: "Adulto",
      precio: 15000
    },
    {
      _id: Number(increment("tickets")),
      tipo: "Niño",
      precio: 7500
    },
    {
      _id: Number(increment("tickets")),
      tipo: "Estudiante",
      precio: 10000
    },
    {
      _id: Number(increment("tickets")),
      tipo: "Pareja",
      precio: 25000
    },
    {
      _id: Number(increment("tickets")),
      tipo: "Familiar",
      precio: 30000
    }
]);

//🚧👩‍💼Inyeccion de data a la coleccion ventas👩‍💼🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.ventas.insertMany([
    {
      _id: Number(increment("ventas")),
      id_Cliente: 1,
      id_Tickets: 2,
      descripcion: "Venta de boletos para niños",
      valor_Compra: 7500
    },
    {
      _id: Number(increment("ventas")),
      id_Cliente: 2,
      id_Tickets: 1,
      descripcion: "Venta de boletos para adultos",
      valor_Compra: 15000
    },
    {
      _id: Number(increment("ventas")),
      id_Cliente: 3,
      id_Tickets: 5,
      descripcion: "Venta de boletos familiares",
      valor_Compra: 30000
    }
]);

//🚧⚛️Inyeccion de data a la coleccion especialidad⚛️🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.especialidad.insertMany([
    {
      _id: Number(increment("especialidad")),
      nombre: "Cuidado de Mamíferos",
      descripcion: "Especialidad en el cuidado y manejo de mamíferos en el zoológico."
    },
    {
      _id: Number(increment("especialidad")),
      nombre: "Reptiles y Anfibios",
      descripcion: "Especialidad en la atención y conservación de reptiles y anfibios en el zoológico."
    },
    {
      _id: Number(increment("especialidad")),
      nombre: "Aviario",
      descripcion: "Especialidad en el manejo y cuidado de las aves en el aviario del zoológico."
    },
    {
      _id: Number(increment("especialidad")),
      nombre: "Veterinaria Exótica",
      descripcion: "Especialidad veterinaria enfocada en la salud de animales exóticos del zoológico."
    },
    {
      _id: Number(increment("especialidad")),
      nombre: "Educador Ambiental",
      descripcion: "Especialidad dedicada a la educación y concientización sobre la conservación del medio ambiente y la vida silvestre."
    },
    {
      _id: Number(increment("especialidad")),
      nombre: "Alimentación Animal",
      descripcion: "Especialidad en la preparación y distribución de la dieta de los animales del zoológico."
    },
    {
      _id: Number(increment("especialidad")),
      nombre: "Enriquecimiento Animal",
      descripcion: "Especialidad en diseñar actividades para enriquecer la vida de los animales en cautiverio."
    },
    {
      _id: Number(increment("especialidad")),
      nombre: "Cuidado de Grandes Felinos",
      descripcion: "Especialidad en el manejo y cuidado de los grandes felinos en el zoológico."
    },
    {
      _id: Number(increment("especialidad")),
      nombre: "Investigación Biológica",
      descripcion: "Especialidad en llevar a cabo investigaciones biológicas para entender y conservar la vida silvestre."
    },
    {
      _id: Number(increment("especialidad")),
      nombre: "Manejo de Hábitats",
      descripcion: "Especialidad en mantener y crear hábitats adecuados para los animales del zoológico."
    }
]);

//🚧👩‍💻Inyeccion de data a la coleccion empleado👩‍💻🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.empleado.insertMany([
    {
      _id: Number(increment("empleado")),
      nombre: "Luisa Martínez",
      id_Especialidad: 1, // Cuidado de Mamíferos
      genero: "Femenino",
      identificacion: "55413263",
      salario: 2800000,
      edad: "29",
      celular: "3466434566",
      correo_electronico: "luisa.martinez@gmail.com"
    },
    {
      _id: Number(increment("empleado")),
      nombre: "Carlos Rodríguez",
      id_Especialidad: 2, // Cuidado de Aves
      genero: "Masculino",
      identificacion: "567890123",
      salario: 3000000,
      edad: "32",
      celular: "46237346",
      correo_electronico: "carlos.rodriguez@gmail.com"
    },
    {
      _id: Number(increment("empleado")),
      nombre: "Laura Sánchez",
      id_Especialidad: 3, // Cuidado de Reptiles
      genero: "Femenino",
      identificacion: "64667878246",
      salario: 2600000,
      edad: "27",
      celular: "654321098",
      correo_electronico: "laura.sanchez@gmail.com"
    },
    {
      _id: Number(increment("empleado")),
      nombre: "Javier López",
      id_Especialidad: 1, // Cuidado de Mamíferos
      genero: "Masculino",
      identificacion: "5646786754",
      salario: 2900000,
      edad: "33",
      celular: "76786786",
      correo_electronico: "javier.lopez@gmail.com"
    },
    {
      _id: Number(increment("empleado")),
      nombre: "Ana Morales",
      id_Especialidad: 4, // Cuidado de Peces
      genero: "Femenino",
      identificacion: "76767866",
      salario: 2700000,
      edad: "28",
      celular: "767667566",
      correo_electronico: "ana.morales@gmail.com"
    },
    {
      _id: Number(increment("empleado")),
      nombre: "Andrés Gómez",
      id_Especialidad: 5, // Cuidado de Anfibios
      genero: "Masculino",
      identificacion: "678657678",
      salario: 3100000,
      edad: "30",
      celular: "321098765",
      correo_electronico: "andres.gomez@gmail.com"
    },
    {
      _id: Number(increment("empleado")),
      nombre: "María Torres",
      id_Especialidad: 2, // Cuidado de Aves
      genero: "Femenino",
      identificacion: "456456456",
      salario: 2500000,
      edad: "25",
      celular: "786767867",
      correo_electronico: "maria.torres@gmail.com"
    },
    {
      _id: Number(increment("empleado")),
      nombre: "Roberto Fernández",
      id_Especialidad: 3, // Cuidado de Reptiles
      genero: "Masculino",
      identificacion: "646456456",
      salario: 2700000,
      edad: "28",
      celular: "786786786",
      correo_electronico: "roberto.fernandez@gmail.com"
    },
    {
      _id: Number(increment("empleado")),
      nombre: "Sofía Ramírez",
      id_Especialidad: 4, // Cuidado de Peces
      genero: "Femenino",
      identificacion: "46465466",
      salario: 2900000,
      edad: "29",
      celular: "786786786786",
      correo_electronico: "sofia.ramirez@gmail.com"
    },
    {
      _id: Number(increment("empleado")),
      nombre: "Juan Pérez",
      id_Especialidad: 5, // Cuidado de Anfibios
      genero: "Masculino",
      identificacion: "54634546",
      salario: 2800000,
      edad: "28",
      celular: "456456456",
      correo_electronico: "juan.perez@gmail.com"
    }
]);

//🚧🧧Inyeccion de data a la coleccion emp_Pago🧧🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.emp_Pago.insertMany([
    {
       _id: Number(increment("emp_pago")),
       fecha_Pago: new Date("2023-08-01"),
       cantidad: 2800000,
       descripcion: "Pago correspondiente al mes de agosto",
       id_Empleado: 1
    },
    {
       _id: Number(increment("emp_pago")),
       fecha_Pago: new Date("2023-08-01"),
       cantidad: 400000,
       descripcion: "Pago de bono por desempeño",
       id_Empleado: 2
    },
    {
       _id: Number(increment("emp_pago")),
       fecha_Pago: new Date("2023-08-01"),
       cantidad: 2600000,
       descripcion: "Pago regular de salario",
       id_Empleado: 3
    },
    {
       _id: Number(increment("emp_pago")),
       fecha_Pago: new Date("2023-08-01"),
       cantidad: 2900000,
       descripcion: "Pago mensual por trabajo",
       id_Empleado: 4
    },
    {
       _id: Number(increment("emp_pago")),
       fecha_Pago: new Date("2023-08-01"),
       cantidad: 50000,
       descripcion: "Pago por horas extras",
       id_Empleado: 5
    },
    {
       _id: Number(increment("emp_pago")),
       fecha_Pago: new Date("2023-08-01"),
       cantidad: 120000,
       descripcion: "Pago por guardia nocturna",
       id_Empleado: 6
    },
    {
       _id: Number(increment("emp_pago")),
       fecha_Pago: new Date("2023-08-01"),
       cantidad: 150000,
       descripcion: "Pago por trabajo en el evento especial",
       id_Empleado: 7
    },
    {
       _id: Number(increment("emp_pago")),
       fecha_Pago: new Date("2023-08-01"),
       cantidad: 2700000,
       descripcion: "Pago regular de salario",
       id_Empleado: 8
    },
    {
       _id: Number(increment("emp_pago")),
       fecha_Pago: new Date("2023-08-01"),
       cantidad: 50000,
       descripcion: "Pago por horas extras",
       id_Empleado: 9
    },
    {
       _id: Number(increment("emp_pago")),
       fecha_Pago: new Date("2023-08-01"),
       cantidad: 300000,
       descripcion: "Pago por trabajo en el área de educación",
       id_Empleado: 10
    }
]);

//🚧📟Inyeccion de data a la coleccion emp_Seguro📟🚧

use("zoologico_Campus_JJ");
function increment(coleccion) {
  const sequenceDocument = db.autoincrement.findOneAndUpdate(
      { _id: `${coleccion}Id` },
      { $inc: { sequence_value: 1 } },
      { returnDocument: "after" }
  );
  return sequenceDocument.sequence_value;
}
db.emp_Seguro.insertMany([
    {
       _id: Number(increment("emp_seguro")),
       estado: "Activo",
       tipo: "Salud",
       precio: 200000,
       fecha_Expedicion: ISODate("2023-08-01"),
       fecha_Expiracion: ISODate("2024-07-31"),
       id_Empleado: 1
    },
    {
       _id: Number(increment("emp_seguro")),
       estado: "Activo",
       tipo: "Vida",
       precio: 1500000,
       fecha_Expedicion: ISODate("2023-08-01"),
       fecha_Expiracion: ISODate("2024-07-31"),
       id_Empleado: 2
    },
    {
       _id: Number(increment("emp_seguro")),
       estado: "Activo",
       tipo: "Salud",
       precio: 800000,
       fecha_Expedicion: ISODate("2023-08-01"),
       fecha_Expiracion: ISODate("2024-07-31"),
       id_Empleado: 3
    },
    {
       _id: Number(increment("emp_seguro")),
       estado: "Activo",
       tipo: "Accidentes",
       precio: 1200000,
       fecha_Expedicion: ISODate("2023-08-01"),
       fecha_Expiracion: ISODate("2024-07-31"),
       id_Empleado: 4
    },
    {
       _id: Number(increment("emp_seguro")),
       estado: "Activo",
       tipo: "Vida",
       precio: 1700000,
       fecha_Expedicion: ISODate("2023-08-01"),
       fecha_Expiracion: ISODate("2024-07-31"),
       id_Empleado: 5
    },
    {
       _id: Number(increment("emp_seguro")),
       estado: "Activo",
       tipo: "Salud",
       precio: 1200000,
       fecha_Expedicion: ISODate("2023-08-01"),
       fecha_Expiracion: ISODate("2024-07-31"),
       id_Empleado: 6
    },
    {
       _id: Number(increment("emp_seguro")),
       estado: "Activo",
       tipo: "Vida",
       precio: 900000,
       fecha_Expedicion: ISODate("2023-08-01"),
       fecha_Expiracion: ISODate("2024-07-31"),
       id_Empleado: 7
    },
    {
       _id: Number(increment("emp_seguro")),
       estado: "Activo",
       tipo: "Salud",
       precio: 600000,
       fecha_Expedicion: ISODate("2023-08-01"),
       fecha_Expiracion: ISODate("2024-07-31"),
       id_Empleado: 8
    },
    {
       _id: Number(increment("emp_seguro")),
       estado: "Activo",
       tipo: "Accidentes",
       precio: 1400000,
       fecha_Expedicion: ISODate("2023-08-01"),
       fecha_Expiracion: ISODate("2024-07-31"),
       id_Empleado: 9
    },
    {
       _id: Number(increment("emp_seguro")),
       estado: "Activo",
       tipo: "Vida",
       precio: 1800000,
       fecha_Expedicion: ISODate("2023-08-01"),
       fecha_Expiracion: ISODate("2024-07-31"),
       id_Empleado: 10
    }
]);